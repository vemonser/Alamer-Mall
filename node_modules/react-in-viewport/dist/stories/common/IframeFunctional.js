"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactAspectRatio = _interopRequireDefault(require("react-aspect-ratio"));

var _index = require("../../index");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function IframeFunctional(props) {
  var inViewport = props.inViewport,
      src = props.src,
      ratio = props.ratio,
      forwardedRef = props.forwardedRef;

  var _useState = (0, _react.useState)(false),
      loaded = _useState[0],
      setLoaded = _useState[1];

  (0, _react.useEffect)(function () {
    if (inViewport && !loaded) {
      setLoaded(true);
    }
  }, [inViewport, loaded]);
  var Component = loaded ? 'iframe' : 'div';
  var componentProps = loaded ? {
    src: src,
    frameBorder: 0
  } : {};
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactAspectRatio["default"], {
    ratio: ratio,
    style: {
      marginBottom: '200px',
      backgroundColor: 'rgba(0,0,0,.12)'
    },
    ref: forwardedRef,
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(Component, _extends({}, componentProps))
  });
}

var LazyIframe = (0, _index.handleViewport)( /*#__PURE__*/(0, _react.memo)(IframeFunctional), {}, {
  disconnectOnLeave: true
});
var _default = LazyIframe;
exports["default"] = _default;