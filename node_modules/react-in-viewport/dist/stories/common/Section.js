"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _index = require("../../index");

var _jsxRuntime = require("react/jsx-runtime");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var MySectionBlock = /*#__PURE__*/function (_PureComponent) {
  _inheritsLoose(MySectionBlock, _PureComponent);

  function MySectionBlock() {
    return _PureComponent.apply(this, arguments) || this;
  }

  var _proto = MySectionBlock.prototype;

  _proto.getStyle = function getStyle() {
    var _this$props = this.props,
        inViewport = _this$props.inViewport,
        enterCount = _this$props.enterCount;
    var basicStyle = {
      width: '400px',
      height: '300px',
      backgroundColor: '#217ac0',
      color: '#fff'
    }; // Fade in only the first time we enter the viewport

    if (inViewport && enterCount === 1) {
      return _extends({}, basicStyle, {
        WebkitTransition: 'opacity 1s ease-in-out'
      });
    }

    if (!inViewport && enterCount < 1) {
      return _extends({}, basicStyle, {
        WebkitTransition: 'none',
        opacity: '0'
      });
    }

    return basicStyle;
  };

  _proto.render = function render() {
    var _this$props2 = this.props,
        enterCount = _this$props2.enterCount,
        leaveCount = _this$props2.leaveCount;
    return /*#__PURE__*/(0, _jsxRuntime.jsx)("section", {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: "card",
        style: this.getStyle(),
        children: /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
          className: "card__conent",
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h3", {
            children: "Hello"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
            children: "Enter viewport: " + enterCount + " times"
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("p", {
            children: "Leave viewport: " + leaveCount + " times"
          })]
        })
      })
    });
  };

  return MySectionBlock;
}(_react.PureComponent);

var SectionWithTransition = (0, _index.handleViewport)(MySectionBlock, {
  rootMargin: '-1.0px'
});
var _default = SectionWithTransition;
exports["default"] = _default;