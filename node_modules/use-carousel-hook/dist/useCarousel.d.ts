import React from 'react';
export declare type Interaction = 'scroll' | 'button' | null;
interface Options<RefElement> {
    scrollBehavior?: ScrollBehavior;
    direction?: 'horizontal' | 'vertical';
    initialRef?: React.MutableRefObject<RefElement>;
}
interface CarouselPosition {
    isAtStart: boolean;
    isAtEnd: boolean;
}
interface CarouselHook<RefElement> {
    ref: React.RefObject<RefElement>;
    previous: (amount?: number, interaction?: Interaction) => void;
    next: (amount?: number, interaction?: Interaction) => void;
    setCurrent: (current: number, interaction?: Interaction) => void;
    reset: () => void;
    position: CarouselPosition;
    current: number;
    inView: number[];
}
declare const useCarousel: <RefElement extends HTMLElement>(options?: Options<RefElement>) => CarouselHook<RefElement>;
export default useCarousel;
