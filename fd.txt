        <Box>
            <Flex
                bg={useColorModeValue('white', 'gray.800')}
                color={useColorModeValue('gray.600', 'white')}
                minH={'60px'}
                py={{ base: 2 }}
                px={{ base: 4 }}
                borderBottom={1}
                borderStyle={'solid'}
                borderColor={useColorModeValue('gray.200', 'gray.900')}
                align={'center'}>
                <Flex
                    flex={{ base: 1, md: 'auto' }}
                    ml={{ base: -2 }}
                    display={{ base: 'flex', md: 'none' }}>
                    <IconButton
                        onClick={onToggle}
                        icon={
                            isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />
                        }
                        variant={'ghost'}
                        aria-label={'Toggle Navigation'}
                    />
                </Flex>
                <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>
                    <Text
                        textAlign={useBreakpointValue({ base: 'center', md: 'left' })}
                        fontFamily={'heading'}
                        color={useColorModeValue('gray.800', 'white')}>
                        Logo
                    </Text>

                    <Flex display={{ base: 'none', md: 'flex' }} ml={10}>
                        <DesktopNav />
                    </Flex>
                </Flex>

                <Stack
                    flex={{ base: 1, md: 0 }}
                    justify={'flex-end'}
                    direction={'row'}
                    spacing={6}>
                    <Button
                        as={'a'}
                        fontSize={'sm'}
                        fontWeight={400}
                        variant={'link'}
                        href={'#'}>
                        Sign In
                    </Button>
                    <Button
                        display={{ base: 'none', md: 'inline-flex' }}
                        fontSize={'sm'}
                        fontWeight={600}
                        color={'white'}
                        bg={'pink.400'}
                        href={'#'}
                        _hover={{
                            bg: 'pink.300',
                        }}>
                        Sign Up
                    </Button>
                </Stack>
            </Flex>

            <Collapse in={isOpen} animateOpacity>
                <MobileNav />
            </Collapse>
        </Box>







        pos={"absolute"}
                        top="45%" direction={"column"}
                        zIndex={10} left="45vw"
                        alignItems={"center"} justifyContent={"center"} >



































                              
      <Flex color='white' gap={5} flexDir={["column", "row", "row"]}>

        <Box flex='2' bg='tomato' _hover={{ flexGrow: "3" }} transition="all 500ms" >
          <Box pos={'relative'} height={"200px"} overflow={'hidden'}>
            {/* <Image  layout="fill" objectFit='cover'/> */}
          </Box>

        </Box>


        <Square flex='1' bg='blue.500' size='200px' _hover={{ flexGrow: "3" }} transition="all 500ms">

          <Text>Box 2</Text>

        </Square>



      </Flex>

      width="300px" height={"400px"
width="768px" height={"400px"
width="300px" height={"400px"










Framer motion and chakra ui code snipt




import { Box } from '@chakra-ui/react'

import { motion } from 'framer-motion'



function Example() {

  return (

    <Box

      as={motion.div}

      height='40px'

      width='40px'

      bg='orange.400'

      drag='x'

      dragConstraints={{ left: -100, right: 100 }}

      whileHover={{ scale: 1.1 }}

      whileTap={{ scale: 0.9 }}

      transition='0.5s linear'

      // not work: transition={{ transition: "0.5", ease: "linear" }}

    />

  )

}






ANOTHER ONE  =======>  key frame 



import { Box, Container, keyframes } from '@chakra-ui/react';
import { motion } from 'framer-motion';

const animationKeyframes = keyframes`
  0% { transform: scale(1) rotate(0); border-radius: 20%; }
  25% { transform: scale(2) rotate(0); border-radius: 20%; }
  50% { transform: scale(2) rotate(270deg); border-radius: 50%; }
  75% { transform: scale(1) rotate(270deg); border-radius: 50%; }
  100% { transform: scale(1) rotate(0); border-radius: 20%; }
`;

const animation = `${animationKeyframes} 2s ease-in-out infinite`;
  
export default function App() {
  return (
    <Container h="100vh" display="flex" alignItems="center" justifyContent="center">
      <Box
        as={motion.div}
        animation={animation}
        // not work: transition={{ ... }}
        padding="2"
        // @ts-ignore - "Does not exist" Type Error against Motion
        bgGradient="linear(to-l, #7928CA, #FF0080)"
        width="12"
        height="12"
        display="flex"
      />
    </Container>
  )
};


